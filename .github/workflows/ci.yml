name: CI

on:
  push:
    branches: [master]
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    strategy:
      matrix:
        platform: [ubuntu-latest]
        node: ['16']
    name: Node ${{ matrix.node }} (${{ matrix.platform }})
    runs-on: ${{ matrix.platform }}

    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_DB: test
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test!
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    steps:
      - name: Get current time
        uses: 1466587594/get-current-time@v2
        id: current-time
        with:
          format: YYYYMMDD-HH-mm-ss

      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}
      - uses: pnpm/action-setup@v2.0.1
        with:
          version: 6.22.2

      - name: Install modules
        run: pnpm install

      - name: Check linting
        run: pnpm lint

      - name: Build typescript
        run: pnpm build

      - name: Generate schema.graphql with test data
        run: pnpm dev

      - name: Upload generated schema.graphql
        uses: actions/upload-artifact@v2
        with:
          name: "${{ steps.current-time.outputs.formattedTime }}-schema.graphql"
          path: prisma/generated/schema.graphql
        
      - name: Remove dist
        run: rm -rf ./dist*

      - name: Test
        run: pnpm test -- --coverage --detectOpenHandles --forceExit

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1.0.10
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./coverage/
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
          path_to_write_report: ./coverage/codecov_report.gz
